set-option -g mouse on
set -g repeat-time 1000
set-option -g default-shell /usr/local/bin/zsh

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# set window split
unbind %
bind-key % split-window -h -c "#{pane_current_path}"

unbind '"'
bind-key '"' split-window -c "#{pane_current_path}"


# load config
bind-key r source-file ~/.tmux.conf

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour32 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour31 #blue
set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour green #green


set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 60
set -g status-right-length 140
set -g status-left '#[fg=green]#(${HOME}/dotfiles/util/spotify-volume-bar.py) #[fg=green]#(${HOME}/dotfiles/util/spotify-info)'
set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load 1) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=colour100]%Y-%m-%d'

bind-key C-m run-shell "~/dotfiles/util/spotify-toggle && /usr/local/bin/tmux refresh-client -S"
bind-key C-u run-shell "~/dotfiles/util/spotify-volume-up && /usr/local/bin/tmux refresh-client -S"
bind-key C-d run-shell "~/dotfiles/util/spotify-volume-down && /usr/local/bin/tmux refresh-client -S"


# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix
bind-key C-l last-window

bind b break-pane

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

bind-key -r Left resize-pane -L 5
bind-key -r Right resize-pane -R 5
bind-key -r Down resize-pane -D 5
bind-key -r Up resize-pane -U 5

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind c new-window -c "#{pane_current_path}"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."


# color
set -g default-terminal "screen-256color"

# status bar

# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind s; bind s split-window -v -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'
